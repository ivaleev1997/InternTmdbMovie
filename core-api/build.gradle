apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "de.mannodermaus.android-junit5"
apply plugin: "androidx.navigation.safeargs.kotlin"

apply from: "$project.rootDir/spek_and_junit5.gradle"
apply from: "$project.rootDir/common_build.gradle"
android {
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "TMDB_IMAGE_SERVER_URL", "\"${tmdb_image_url}\""
        }
        debug {
            buildConfigField "String", "TMDB_IMAGE_SERVER_URL", "\"${tmdb_image_url}\""
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation(
            kotlin_std_lib,
            androidx_appcompat,
            androidx_core_ktx,
            fragment,
            constraintlayout,
            lifecycle_ext,
            lifecycle_livedata_ktx,
            material,
            retrofit2,
            retrofit2_converter_gson,
            rxjava2,
            rxAndroid,
            // navigation component
            navigation_fragment,
            navigation_ui,
            navigation_ui_ktx,
            navigation_fragment_ktx,
            dagger2,
            timber,
            groupie,
            groupie_ktx,
            lottie,
            biometric,
            room,
            room_rxjava2
    )

    kapt dagger2_compiler
    kapt room_compiler

    testImplementation junit
    androidTestImplementation(androidx_junit, androidx_espresso)

    testImplementation assertj

    testImplementation(junit_jupiter_api, junit_jupiter_params)
    testRuntimeOnly junit_jupiter_engine

    // spek
    testImplementation(spek_dsl_jvm, spek_runner_junit5)
}
